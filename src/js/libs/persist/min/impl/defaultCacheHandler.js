/**
 * @license
 * Copyright (c) 2014, 2018, Oracle and/or its affiliates.
 * The Universal Permissive License (UPL), Version 1.0
 */
define(["../persistenceUtils","../persistenceStoreManager"],function(a,b){"use strict";function c(){Object.defineProperty(this,"_endpointToOptionsMap",{value:{},writable:!0})}function d(a){var b=a.map(function(a){var b=Object.keys(a)[0],c=a[b];return c&&c.length?e(b,c):Promise.resolve()});return Promise.all(b)}function e(a,c){return b.openStore(a).then(function(a){return a.upsertAll(c)})}function f(a){for(var b=a.name,c=a.resourceIdentifier,d=a.keys,e=[],f=(new Date).toUTCString(),g=0;g<d.length;g++){var h={key:d[g],metadata:{lastUpdated:f,resourceIdentifier:c},value:a.data[g]};e.push(h)}var i={};return i[b]=e,i}function g(a){var c=a.name;return b.openStore(c).then(function(b){if(a.keys&&a.keys.length){if(1===a.keys.length)return b.findByKey(a.keys[0]);var c=a.keys.map(function(a){return{key:a}}),d={selector:{$or:c}};return b.find(d)}return Promise.resolve([])}).then(function(b){return Array.isArray(b)||(b=Array(1).fill(b)),a.data=b,Promise.resolve(a)})}c.prototype.constructRequestResponseCacheData=function(b,c){var d=this;return new Promise(function(e,f){var g={};a.requestToJSON(b).then(function(e){g.requestData=e;var f=d._excludeBody(b);return a.responseToJSON(c,{excludeBody:f})}).then(function(a){g.responseData=a,e({key:d._constructCacheKey(b,c),metadata:d.constructMetadata(b),value:g})}).catch(function(a){f(a)})})},c.prototype.constructShreddedData=function(a,b){var c=this._getShredder(a);return c?c(b).then(function(a){var b=a.map(f);return Promise.resolve(b)}):Promise.resolve()},c.prototype.shredResponse=function(a,b){var c=this._getShredder(a);return c?c(b):Promise.resolve()},c.prototype.cacheShreddedData=function(a){return d(a.map(f))},c.prototype._constructCacheKey=function(a,b){var c=a.url+a.method;if(b){var d=b.headers;if(d){var e=d.get("vary");if(e)if("*"===e)c+=(new Date).getTime();else for(var f=a.headers,g=e.split(","),h=0;h<g.length;h++){var i=g[h],e=f?f.get(i):"undefined";c+=i+"="+e}}}return c},c.prototype.constructMetadata=function(a){var b=(new Date).getTime();return{url:a.url,method:a.method,created:b,lastupdated:b}},c.prototype.constructResponse=function(b){return a.responseFromJSON(b).then(function(b){return a.isCachedResponse(b)||b.headers.set("x-oracle-jscpt-cache-expiration-date",""),Promise.resolve(b)})},c.prototype.constructSearchCriteria=function(a,b){var c=!1;b&&void 0!==b.ignoreSearch&&(c=b.ignoreSearch);var d=!1;b&&void 0!==b.ignoreMethod&&(d=b.ignoreMethod);var e,f,g=a.url.indexOf("?");return f=g>=0?a.url.substring(0,g):a.url,e=c?{"metadata.url":{$regex:"^"+h(f)+"(\\?|$)"}}:{"metadata.url":a.url},d||(e["metadata.method"]=a.method),{selector:e,sort:[{"metadata.created":"asc"}]}},c.prototype.registerEndpointOptions=function(a,b){if(!a)throw new Error({message:"a valid endpointKey must be provided."});if(this._endpointToOptionsMap[a])throw new Error({message:"endpointKey can only be registered once."});this._endpointToOptionsMap[a]=b},c.prototype.unregisterEndpointOptions=function(a){if(!a)throw new Error({message:"a valid endpointKey must be provided."});delete this._endpointToOptionsMap[a]},c.prototype._excludeBody=function(a){return null!==this._getShredder(a)},c.prototype._getShredder=function(a){var b=this._getJsonProcessor(a);return b?b.shredder:null},c.prototype._getUnshredder=function(a){var b=this._getJsonProcessor(a);return b?b.unshredder:null},c.prototype._getJsonProcessor=function(a){for(var b=Object.keys(this._endpointToOptionsMap),c=0;c<b.length;c++){var d=b[c];if(a.url===JSON.parse(d).url){var e=this._endpointToOptionsMap[d];return e&&e.jsonProcessor&&e.jsonProcessor.shredder&&e.jsonProcessor.unshredder?e.jsonProcessor:null}}return null},c.prototype.fillResponseBodyWithShreddedData=function(a,b,c){var d=this._getUnshredder(a),e=this._getShredder(a);if(!(d&&e&&c&&b&&b.length))return Promise.resolve(c);var f=b.map(function(a){return g(a)});return Promise.all(f).then(function(a){return d(a,c)})};var h=function(a){return String(a).replace(/([.*+?^=!:${}()|\[\]\/\\])/g,"\\$1")};return new c});
//# sourceMappingURL=defaultCacheHandler.js.map